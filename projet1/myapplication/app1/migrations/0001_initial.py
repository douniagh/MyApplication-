# Generated by Django 3.2 on 2021-05-31 17:32

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', models.TextField()),
                ('budget', models.IntegerField(validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('montant', models.IntegerField(null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('solde', models.IntegerField(null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('debit', models.IntegerField(null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('credit', models.IntegerField(null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
            ],
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee', models.DateField(auto_now=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('montant', models.IntegerField(validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('solde', models.IntegerField(validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('credit', models.IntegerField(validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('debit', models.IntegerField(validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
            ],
        ),
        migrations.CreateModel(
            name='Caisse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('debit', models.IntegerField()),
                ('credit', models.IntegerField()),
                ('bilan_pdf', models.FileField(null=True, upload_to='user_directory_path', validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Demande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant', models.IntegerField(validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('date_deb', models.DateField(auto_now=True)),
                ('commentaire', models.TextField()),
                ('etat', models.CharField(choices=[('en cours', 'en cours'), ('refusee', 'refusee'), ('acceptee', 'acceptee')], default='en cours', max_length=8)),
                ('type', models.CharField(choices=[('prét', 'prét'), ('don', 'don'), ('aide', 'aide')], max_length=4)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.article')),
                ('idcompteuser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Doc_finace',
            fields=[
                ('numdoc', models.IntegerField(primary_key=True, serialize=False)),
                ('doc_pdf', models.FileField(null=True, upload_to='user_directory_path', validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
                ('type', models.CharField(choices=[('fiche de paie', 'fiche de paie'), ('attestation de solde', 'attestation de solde'), ('relevé de compte', 'relevé de compte'), ('reçu de cheque', 'reçu de cheque')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('date_naissance', models.DateField(null=True)),
                ('adresse', models.CharField(max_length=400)),
                ('poste', models.CharField(max_length=100)),
                ('ccp', models.IntegerField(verbose_name='numéro du compte postal')),
                ('nss', models.IntegerField(verbose_name='numéro de sécurité sociale')),
                ('email', models.EmailField(max_length=254)),
                ('num_tel', models.IntegerField()),
                ('date_deb', models.DateField(auto_now=True)),
                ('date_sortie', models.DateField()),
                ('photo', models.ImageField(null=True, upload_to='images/')),
                ('sex', models.CharField(choices=[('homme', 'homme'), ('femme', 'femme')], max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Partie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('nbchap', models.IntegerField(null=True)),
                ('budget', models.IntegerField(validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('solde', models.IntegerField(validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('debit', models.IntegerField(null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('credit', models.IntegerField(null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
            ],
        ),
        migrations.CreateModel(
            name='Pv',
            fields=[
                ('numpv', models.IntegerField(primary_key=True, serialize=False)),
                ('objet', models.CharField(max_length=200)),
                ('date', models.DateField(auto_now=True)),
                ('huere_deb', models.TimeField()),
                ('huere_fin', models.TimeField()),
                ('pv_pdf', models.FileField(null=True, upload_to='user_directory_path', validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('idquestion', models.IntegerField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now=True)),
                ('contenu', models.TextField()),
                ('idcompteuser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Recette',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subvention', models.CharField(max_length=500)),
                ('montant', models.IntegerField(validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('description', models.CharField(max_length=300)),
                ('date_entree', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('employe', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app1.employee')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reponse_demande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motif', models.CharField(max_length=1000)),
                ('id_dem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app1.demande')),
            ],
        ),
        migrations.CreateModel(
            name='Reponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now=True)),
                ('contenu', models.TextField()),
                ('idcompteuser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('idquestion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.question')),
            ],
        ),
        migrations.CreateModel(
            name='Pret',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mois1', models.IntegerField(validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('mois2', models.IntegerField(validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('mois3', models.IntegerField(validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('mois4', models.IntegerField(validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('mois5', models.IntegerField(validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('mois6', models.IntegerField(validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('mois7', models.IntegerField(validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('mois8', models.IntegerField(validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('mois9', models.IntegerField(validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('mois10', models.IntegerField(validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('mois11', models.IntegerField(validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('mois12', models.IntegerField(validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('tab_pdf', models.FileField(null=True, upload_to='user_directory_path', validators=[django.core.validators.FileExtensionValidator(['pdf'])], verbose_name='tableau de cotisation ')),
                ('id_dem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app1.demande')),
            ],
        ),
        migrations.CreateModel(
            name='Historique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conges', models.TextField()),
                ('dons', models.TextField()),
                ('idemploye', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.employee')),
                ('numdemande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.demande')),
            ],
        ),
        migrations.CreateModel(
            name='Facture',
            fields=[
                ('idfac', models.IntegerField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(auto_now=True)),
                ('fac_pdf', models.FileField(null=True, upload_to='user_directory_path', validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
                ('mode_paiement', models.CharField(choices=[('cach', 'cach'), ('versement bancaire', 'versement bancaire')], max_length=20)),
                ('idcompteuser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('numdemande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.demande')),
            ],
        ),
        migrations.CreateModel(
            name='Dossier',
            fields=[
                ('numdoss', models.AutoField(primary_key=True, serialize=False)),
                ('doc_pdf', models.FileField(null=True, upload_to='user_directory_path', validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
                ('demande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.demande')),
            ],
        ),
        migrations.CreateModel(
            name='Chapitre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('nbart', models.IntegerField(null=True)),
                ('budget', models.IntegerField(null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('solde', models.IntegerField(null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('debit', models.IntegerField(null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('credit', models.IntegerField(null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\ \\d+)*\\Z'), code='invalid', message=None)])),
                ('partie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.partie')),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='chapitre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.chapitre'),
        ),
        migrations.CreateModel(
            name='Annonce',
            fields=[
                ('numann', models.IntegerField(primary_key=True, serialize=False)),
                ('objet', models.CharField(max_length=200)),
                ('date_deb', models.DateTimeField(auto_now=True)),
                ('date_fin', models.DateTimeField()),
                ('photo', models.ImageField(null=True, upload_to='images/')),
                ('contenu', models.TextField()),
                ('idcompteadmin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
